/*
one of differences... you have some file, for example file test.
If you make ln test hardlink, make ln -s test symlink and then move file test to other dir ( or rename  ), symlink wont work. Hardlink will work. 
Now try deleting file test. Hardlink will still work, in fact you will be still able to acces file until number of hardlinks to file isnt 0.
Thats because of inodes, it is written in manual
*/

And, "An example is worth a hundred paragraphs..."

Create two files:

$ touch blah1   
$ touch blah2
Enter some data into them:

$ echo "Cat" > blah1
$ echo "Dog" > blah2
And as expected:

$cat blah1; cat blah2
Cat
Dog
Let's create hard and soft links:

$ ln blah1 blah1-hard
$ ln -s blah2 blah2-soft
Let's see what just happened:

$ ls -l

blah1
blah1-hard
blah2
blah2-soft -> blah2
Changing the name of blah1 does not matter:

$ mv blah1 blah1-new
$ cat blah1-hard
Cat
blah1-hard points to the inode, the contents, of the file - that wasn't changed.

$ mv blah2 blah2-new
$ ls blah2-soft
blah2-soft
$ cat blah2-soft  
cat: blah2-soft: No such file or directory

/*
The contents of the file could not be found because the soft link points to the name, that was changed, and not to the contents.
Similarly, If blah1 is deleted, blah1-hard still holds the contents; if blah2 is deleted, blah2-soft is just a link to a non-existing file.
*/
